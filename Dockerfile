ARG FE_URL
ARG JWT_SECRET_KEY
ARG PORT
ARG LINK_VERIFICATION
ARG PUBLICPATH
ARG AWS_BUCKET_NAME
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_REGION
ARG TWILIO_ACCOUNT_SID
ARG TWILIO_AUTH_TOKEN
ARG TWILIO_SERVICE_SID
ARG TWILIO_PHONE_NUMBER
ARG MAILER_EMAIL
ARG MAILER_PASS
ARG HOST
ARG USER
ARG PASSWORD

ENV FE_URL=${FE_URL}
ENV JWT_SECRET_KEY=${JWT_SECRET_KEY}
ENV PORT=${PORT}
ENV LINK_VERIFICATION=${LINK_VERIFICATION}
ENV PUBLICPATH=${PUBLICPATH}
ENV AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
ENV AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
ENV AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
ENV AWS_REGION=${AWS_REGION}
ENV TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
ENV TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
ENV TWILIO_SERVICE_SID=${TWILIO_SERVICE_SID}
ENV TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
ENV MAILER_EMAIL=${MAILER_EMAIL}
ENV MAILER_PASS=${MAILER_PASS}
ENV HOST=${HOST}
ENV USER=${USER}
ENV PASSWORD=${PASSWORD}

# Use a base image suitable for your backend application (e.g., Node.js)
FROM node:20.11.1

# Set the working directory in the container
WORKDIR /app

# Copy package.json and package-lock.json to the working directory
COPY package.json .

# Install dependencies
RUN npm install

# Copy the rest of the application code to the working directory
COPY . .

# Expose the port your backend application runs on
EXPOSE 7000

# Command to run your backend application
CMD ["npm","run","start"]